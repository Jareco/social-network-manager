# To start/stop the services, use docker-compose up/down
version: "3.2"

services:
  # databases
  mariadb:
    image: mariadb
    environment:
        - MYSQL_DATABASE=imse
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USER=imse
        - MYSQL_PASSWORD=imsepwd
    volumes:
      - type: bind
        source: ./data/mariadb
        target: /var/lib/mysql
    stdin_open: true
    tty: true
    ports:
      - target: 3306
        published: 3306
        protocol: tcp
    networks:
      imsenet:


  apache:
    image: apache
    build:
      context: .
      dockerfile: Apache.dockerfile
    ports:
      - 4001:80
    volumes:
      - ./src/html/:/usr/local/apache2/htdocs/
    stdin_open: true
    tty: true
    networks:
      imsenet:

  filler:
    image: filler
    build:
      dockerfile: Filler.dockerfile
      context: .
    depends_on:
      - mariadb
    volumes:
      - ./filler:/filler
    networks:
      imsenet:

  ms2_server:
    image: flask
    build:
      dockerfile: Flask.dockerfile
      # set context for build command explicitly
      context: .
    volumes:
      - ./src/:/app/
    ports:
      - 4002:80
    depends_on:
      - filler
    networks:
      imsenet:

  mongo:
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: imse
    volumes:
      - type: bind
        source: ./data/mongo
        target: /data/db
    ports:
      - target: 27017
        published: 27017
        protocol: tcp
    networks:
      imsenet:

  # utilities
  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    ports:
      - target: 8081
        published: 8081
        protocol: tcp
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: imse
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_SERVER: "mongo"
    networks:
      imsenet:
        
networks:
  imsenet:
    attachable: true
